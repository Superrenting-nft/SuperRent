{"ast":null,"code":"const BaseFilter = require('./base-filter'); // tracks all results ever recorded\n\n\nclass BaseFilterWithHistory extends BaseFilter {\n  constructor() {\n    super();\n    this.allResults = [];\n  }\n\n  async update() {\n    throw new Error('BaseFilterWithHistory - no update method specified');\n  }\n\n  addResults(newResults) {\n    this.allResults = this.allResults.concat(newResults);\n    super.addResults(newResults);\n  }\n\n  addInitialResults(newResults) {\n    this.allResults = this.allResults.concat(newResults);\n    super.addInitialResults(newResults);\n  }\n\n  getAllResults() {\n    return this.allResults;\n  }\n\n}\n\nmodule.exports = BaseFilterWithHistory;","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/eth-json-rpc-filters/base-filter-history.js"],"names":["BaseFilter","require","BaseFilterWithHistory","constructor","allResults","update","Error","addResults","newResults","concat","addInitialResults","getAllResults","module","exports"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B,C,CAEA;;;AACA,MAAMC,qBAAN,SAAoCF,UAApC,CAA+C;AAE7CG,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAEW,QAANC,MAAM,GAAI;AACd,UAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAEDC,EAAAA,UAAU,CAAEC,UAAF,EAAc;AACtB,SAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,MAAhB,CAAuBD,UAAvB,CAAlB;AACA,UAAMD,UAAN,CAAiBC,UAAjB;AACD;;AAEDE,EAAAA,iBAAiB,CAAEF,UAAF,EAAc;AAC7B,SAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,MAAhB,CAAuBD,UAAvB,CAAlB;AACA,UAAME,iBAAN,CAAwBF,UAAxB;AACD;;AAEDG,EAAAA,aAAa,GAAI;AACf,WAAO,KAAKP,UAAZ;AACD;;AAvB4C;;AA2B/CQ,MAAM,CAACC,OAAP,GAAiBX,qBAAjB","sourcesContent":["const BaseFilter = require('./base-filter')\n\n// tracks all results ever recorded\nclass BaseFilterWithHistory extends BaseFilter {\n\n  constructor () {\n    super()\n    this.allResults = []\n  }\n\n  async update () {\n    throw new Error('BaseFilterWithHistory - no update method specified')\n  }\n\n  addResults (newResults) {\n    this.allResults = this.allResults.concat(newResults)\n    super.addResults(newResults)\n  }\n\n  addInitialResults (newResults) {\n    this.allResults = this.allResults.concat(newResults)\n    super.addInitialResults(newResults)\n  }\n\n  getAllResults () {\n    return this.allResults\n  }\n\n}\n\nmodule.exports = BaseFilterWithHistory"]},"metadata":{},"sourceType":"script"}