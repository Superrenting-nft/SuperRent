{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined,\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"client\" // no-referrer, *client\n\n    };\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}","map":{"version":3,"sources":["../src.ts/browser-geturl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,QAAT,QAAyB,sBAAzB;AAMA,OAAM,SAAgB,MAAhB,CAAuB,IAAvB,EAAqC,OAArC,EAAsD;;AACxD,QAAI,OAAO,IAAI,IAAf,EAAqB;AAAE,MAAA,OAAO,GAAG,EAAV;AAAgB;;AAEvC,UAAM,OAAO,GAAG;AACZ,MAAA,MAAM,EAAG,OAAO,CAAC,MAAR,IAAkB,KADf;AAEZ,MAAA,OAAO,EAAG,OAAO,CAAC,OAAR,IAAmB,EAFjB;AAGZ,MAAA,IAAI,EAAG,OAAO,CAAC,IAAR,IAAgB,SAHX;AAKZ,MAAA,IAAI,EAAe,MALP;AAMZ,MAAA,KAAK,EAAgB,UANT;AAOZ,MAAA,WAAW,EAAsB,aAPrB;AAQZ,MAAA,QAAQ,EAAmB,QARf;AASZ,MAAA,QAAQ,EAAE,QATE,CASgB;;AAThB,KAAhB;AAYA,UAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAD,EAAO,OAAP,CAA5B;AACA,UAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,WAAT,EAAnB;AAEA,UAAM,OAAO,GAAiC,EAA9C;;AACA,QAAI,QAAQ,CAAC,OAAT,CAAiB,OAArB,EAA8B;AAC1B,MAAA,QAAQ,CAAC,OAAT,CAAiB,OAAjB,CAAyB,CAAC,KAAD,EAAQ,GAAR,KAAe;AACpC,QAAA,OAAO,CAAC,GAAG,CAAC,WAAJ,EAAD,CAAP,GAA6B,KAA7B;AACH,OAFD;AAGH,KAJD,MAIO;AAC2B,MAAA,QAAQ,CAAC,OAAV,CAAoB,IAA3B,GAAoC,OAApC,CAA6C,GAAD,IAAQ;AACtE,QAAA,OAAO,CAAC,GAAG,CAAC,WAAJ,EAAD,CAAP,GAA6B,QAAQ,CAAC,OAAT,CAAiB,GAAjB,CAAqB,GAArB,CAA7B;AACH,OAFqB;AAGzB;;AAED,WAAO;AACH,MAAA,OAAO,EAAE,OADN;AAEH,MAAA,UAAU,EAAE,QAAQ,CAAC,MAFlB;AAGH,MAAA,aAAa,EAAE,QAAQ,CAAC,UAHrB;AAIH,MAAA,IAAI,EAAE,QAAQ,CAAC,IAAI,UAAJ,CAAe,IAAf,CAAD;AAJX,KAAP;AAMH,G;AAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrer: \"client\", // no-referrer, *client\n        };\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map"]},"metadata":{},"sourceType":"module"}