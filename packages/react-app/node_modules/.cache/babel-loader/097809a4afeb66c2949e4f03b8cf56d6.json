{"ast":null,"code":"var _jsxFileName = \"/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/ThemeSwitch.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nexport default function ThemeSwitcher() {\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!theme || theme == \"light\" ? false : true);\n  const {\n    switcher,\n    currentTheme,\n    status,\n    themes\n  } = useThemeSwitcher();\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({\n      theme: isChecked ? themes.dark : themes.light\n    });\n  }; // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main fade-in\",\n    style: {\n      position: \"fixed\",\n      right: 8,\n      bottom: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, currentTheme == \"light\" ? \"☀️\" : \"🌜\"), /*#__PURE__*/React.createElement(Switch, {\n    checked: isDarkMode,\n    onChange: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/ThemeSwitch.jsx"],"names":["React","useEffect","useState","Switch","useThemeSwitcher","ThemeSwitcher","theme","window","localStorage","getItem","isDarkMode","setIsDarkMode","switcher","currentTheme","status","themes","setItem","toggleTheme","isChecked","dark","light","position","right","bottom","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,aAAT,GAAyB;AAEtC,QAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAACI,KAAD,IAAUA,KAAK,IAAI,OAAnB,GAA6B,KAA7B,GAAqC,IAAtC,CAA5C;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA6CX,gBAAgB,EAAnE;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4B,OAA5B,EAAqCH,YAArC;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;;AAIA,QAAMI,WAAW,GAAIC,SAAD,IAAe;AACjCP,IAAAA,aAAa,CAACO,SAAD,CAAb;AACAN,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,KAAK,EAAEY,SAAS,GAAGH,MAAM,CAACI,IAAV,GAAiBJ,MAAM,CAACK;AAA1C,KAAD,CAAR;AACD,GAHD,CAVsC,CAetC;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,OAAV;AAAkBC,MAAAA,KAAK,EAAC,CAAxB;AAA0BC,MAAAA,MAAM,EAAC;AAAjC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BX,YAAY,IAAE,OAAd,GAAwB,IAAxB,GAA+B,IAA1D,CADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,UAAjB;AAA6B,IAAA,QAAQ,EAAEO,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!theme || theme == \"light\" ? false : true);\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = (isChecked) => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{position:\"fixed\",right:8,bottom:8}}>\n      <span style={{padding:8}}>{currentTheme==\"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}