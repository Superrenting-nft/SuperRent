{"ast":null,"code":"var _jsxFileName = \"/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/Swap.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Space, Row, InputNumber, Card, notification, Select, Descriptions, Typography, Button, Divider, Tooltip, Drawer, Modal } from \"antd\";\nimport { SettingOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { ChainId, Token, WETH, Fetcher, Trade, TokenAmount, Percent } from '@uniswap/sdk';\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json';\nimport { useDebounce } from \"../hooks\";\nconst {\n  Option\n} = Select;\nconst {\n  Text\n} = Typography;\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nconst erc20Abi = [\"function balanceOf(address owner) view returns (uint256)\", \"function approve(address _spender, uint256 _value) public returns (bool success)\", \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n\n    return result;\n  } else {\n    console.log('no call of that name!');\n  }\n};\n\nlet defaultToken = 'ETH';\nlet defaultTokenOut = 'DAI';\nlet defaultSlippage = '0.5';\nlet defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array => array.reduce((obj, item) => {\n  obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n  return obj;\n}, {});\n\nfunction Swap({\n  selectedProvider,\n  tokenListURI\n}) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"));\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n  const [tokenList, setTokenList] = useState([]);\n  const [tokens, setTokens] = useState();\n  const [invertPrice, setInvertPrice] = useState(false);\n  let blockNumber = useBlockNumber(selectedProvider, 3000);\n  let signer = selectedProvider.getSigner();\n  let routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  let _tokenListUri = tokenListURI ? tokenListURI : 'https://gateway.ipfs.io/ipns/tokens.uniswap.org';\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n  const activeChainId = process.env.REACT_APP_NETWORK === 'kovan' ? ChainId.KOVAN : ChainId.MAINNET;\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n\n      try {\n        let tokenList = await fetch(_tokenListUri);\n        let tokenListJson = await tokenList.json();\n        let filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        let ethToken = WETH[activeChainId];\n        ethToken.name = 'Ethereum';\n        ethToken.symbol = 'ETH';\n        ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        let _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n\n        let _tokens = tokenListToObject(_tokenList);\n\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      let pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      let baseTokens = tokenList.filter(function (t) {\n        return ['DAI', 'USDC', 'USDT', 'COMP', 'ETH', 'MKR', 'LINK', tokenIn, tokenOut].includes(t.symbol);\n      }).map(el => {\n        return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n      });\n      let listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        let listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      let listOfPairs = await getPairs(listOfPairwiseTokens);\n      let bestTrade;\n\n      if (exact === 'in') {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(listOfPairs.filter(item => item), new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)), tokens[tokenOut], {\n          maxNumResults: 3,\n          maxHops: 1\n        });\n\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === 'out') {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(listOfPairs.filter(item => item), tokens[tokenIn], new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)), {\n          maxNumResults: 3,\n          maxHops: 1\n        });\n\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === 'in') {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === 'out') {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n\n    if (_token === 'ETH') {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall('balanceOf', _contract, [_account]);\n    }\n\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      let accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        let tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        let newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n        let allowance;\n\n        if (tokenIn === 'ETH') {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall('allowance', tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        let tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        let newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n  let route = trades ? trades.length > 0 ? trades[0].route.path.map(function (item) {\n    return item['symbol'];\n  }) : [] : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n\n    try {\n      let tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      let result = await makeCall('approve', tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: 'Approval unsuccessful',\n        description: `Error: ${e.message}`\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    let approvalAmount = exact === 'in' ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    let approval = updateRouterAllowance(approvalAmount);\n\n    if (approval) {\n      notification.open({\n        message: 'Token transfer approved',\n        description: `You can now swap up to ${amountIn} ${tokenIn}`\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    let approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    let removal = updateRouterAllowance(approvalAmount);\n\n    if (removal) {\n      notification.open({\n        message: 'Token approval removed',\n        description: `The router is no longer approved for ${tokenIn}`\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n\n    try {\n      let args;\n      let metadata = {};\n      let call;\n      let deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      let path = trades[0].route.path.map(function (item) {\n        return item['address'];\n      });\n      console.log(path);\n      let accountList = await selectedProvider.listAccounts();\n      let address = accountList[0];\n\n      if (exact === 'in') {\n        let _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n\n        let _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n\n        if (tokenIn === 'ETH') {\n          call = 'swapExactETHForTokens';\n          args = [_amountOutMin, path, address, deadline];\n          metadata['value'] = _amountIn;\n        } else {\n          call = tokenOut === 'ETH' ? 'swapExactTokensForETH' : 'swapExactTokensForTokens';\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === 'out') {\n        let _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\n\n        let _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n\n        if (tokenIn === 'ETH') {\n          call = 'swapETHForExactTokens';\n          args = [_amountOut, path, address, deadline];\n          metadata['value'] = _amountInMax;\n        } else {\n          call = tokenOut === 'ETH' ? 'swapTokensForExactETH' : 'swapTokensForExactTokens';\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n\n      console.log(call, args, metadata);\n      let result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: 'Swap complete 🦄',\n        description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 11\n          }\n        }, `Swapped ${tokenIn} for ${tokenOut}, transaction: `), /*#__PURE__*/React.createElement(Text, {\n          copyable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 77\n          }\n        }, result.hash))\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: 'Swap unsuccessful',\n        description: `Error: ${e.message}`\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  let insufficientBalance = balanceIn ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn : null;\n  let inputIsToken = tokenIn !== 'ETH';\n  let insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn : null;\n  let formattedBalanceIn = balanceIn ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6) : null;\n  let formattedBalanceOut = balanceOut ? parseFloat(formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6) : null;\n  let metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address;\n  })[0] : null;\n  let metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address;\n  })[0] : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace('ipfs://', 'https://ipfs.io/ipfs/');\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  let logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  let logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n  let rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  let price = rawPrice ? rawPrice.toSignificant(7) : null;\n  let priceDescription = rawPrice ? invertPrice ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}` : null;\n  let priceWidget = /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    type: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 5\n    }\n  }, priceDescription), /*#__PURE__*/React.createElement(Button, {\n    type: \"text\",\n    onClick: () => {\n      setInvertPrice(!invertPrice);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RetweetOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 72\n    }\n  })));\n  let swapModal = /*#__PURE__*/React.createElement(Modal, {\n    title: \"Confirm swap\",\n    visible: swapModalVisible,\n    onOk: handleSwapModalOk,\n    onCancel: handleSwapModalCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoIn,\n    alt: tokenIn,\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }), amountIn, tokenIn)), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    style: {\n      width: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 63\n    }\n  }, \"\\u2193\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoOut,\n    alt: tokenOut,\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 19\n    }\n  }), amountOut, tokenOut)), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, priceWidget), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, trades && (amountOutMin && exact === 'in' || amountInMax && exact === 'out') ? exact === 'in' ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.` : `Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.` : null));\n  return /*#__PURE__*/React.createElement(Card, {\n    title: /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\",\n      width: \"40\",\n      alt: \"uniswapLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 134\n      }\n    }, \"Uniswapper\")),\n    extra: /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      onClick: () => {\n        setSettingsVisible(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 186\n      }\n    }, /*#__PURE__*/React.createElement(SettingOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 249\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    size: \"small\",\n    type: \"inner\",\n    title: `From${exact === 'out' && tokenIn && tokenOut ? ' (estimate)' : ''}`,\n    extra: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      src: logoIn,\n      alt: tokenIn,\n      width: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 117\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: () => {\n        setAmountOut();\n        setAmountIn(formatUnits(balanceIn, tokens[tokenIn].decimals));\n        setAmountOutMin();\n        setAmountInMax();\n        setExact('in');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 161\n      }\n    }, formattedBalanceIn)),\n    style: {\n      width: 400,\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    style: {\n      width: '160px'\n    },\n    min: 0,\n    size: 'large',\n    value: amountIn,\n    onChange: e => {\n      setAmountOut();\n      setTrades();\n      setAmountIn(e);\n      setExact('in');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    value: tokenIn,\n    style: {\n      width: '120px'\n    },\n    size: 'large',\n    bordered: false,\n    defaultValue: defaultToken,\n    onChange: value => {\n      console.log(value);\n\n      if (value === tokenOut) {\n        console.log('switch!', tokenIn);\n        setTokenOut(tokenIn);\n        setAmountOut(amountIn);\n        setBalanceOut(balanceIn);\n      }\n\n      setTokenIn(value);\n      setTrades();\n      setAmountIn();\n      setExact('out');\n      setBalanceIn();\n    },\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    optionFilterProp: \"children\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }\n  }, tokenList.map(token => /*#__PURE__*/React.createElement(Option, {\n    key: token.symbol,\n    value: token.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }, token.symbol))))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: route.join(\"->\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 41\n    }\n  }, \"\\u2193\"))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    size: \"small\",\n    type: \"inner\",\n    title: `To${exact === 'in' && tokenIn && tokenOut ? ' (estimate)' : ''}`,\n    extra: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      src: logoOut,\n      width: \"30\",\n      alt: tokenOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 114\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 160\n      }\n    }, formattedBalanceOut)),\n    style: {\n      width: 400,\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    style: {\n      width: '160px'\n    },\n    size: 'large',\n    min: 0,\n    value: amountOut,\n    onChange: e => {\n      setAmountOut(e);\n      setAmountIn();\n      setTrades();\n      setExact('out');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    value: tokenOut,\n    style: {\n      width: '120px'\n    },\n    size: 'large',\n    bordered: false,\n    onChange: value => {\n      console.log(value, tokenIn, tokenOut);\n\n      if (value === tokenIn) {\n        console.log('switch!', tokenOut);\n        setTokenIn(tokenOut);\n        setAmountIn(amountOut);\n        setBalanceIn(balanceOut);\n      }\n\n      setTokenOut(value);\n      setExact('in');\n      setAmountOut();\n      setTrades();\n      setBalanceOut();\n    },\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    optionFilterProp: \"children\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }\n  }, tokenList.map(token => /*#__PURE__*/React.createElement(Option, {\n    key: token.symbol,\n    value: token.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }\n  }, token.symbol))))), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 5\n    }\n  }, priceDescription ? priceWidget : null), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 5\n    }\n  }, inputIsToken ? /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    loading: approving,\n    disabled: !insufficientAllowance,\n    onClick: approveRouter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, !insufficientAllowance && amountIn && amountOut ? 'Approved' : 'Approve') : null, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    loading: swapping,\n    disabled: insufficientAllowance || insufficientBalance || !amountIn || !amountOut,\n    onClick: showSwapModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }\n  }, insufficientBalance ? 'Insufficient balance' : 'Swap!'), swapModal))), /*#__PURE__*/React.createElement(Drawer, {\n    visible: settingsVisible,\n    onClose: () => {\n      setSettingsVisible(false);\n    },\n    width: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions, {\n    title: \"Details\",\n    column: 1,\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"blockNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }\n  }, blockNumber), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"routerAllowance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 50\n    }\n  }, routerAllowance ? formatUnits(routerAllowance, tokens[tokenIn].decimals) : null, routerAllowance > 0 ? /*#__PURE__*/React.createElement(Button, {\n    onClick: removeRouterAllowance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 152\n    }\n  }, \"Remove Allowance\") : null)), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }\n  }, route.join(\"->\")), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"exact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }\n  }, exact), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"bestPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }\n  }, trades ? trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null : null), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"nextMidPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }, trades ? trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null : null), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"priceImpact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }\n  }, trades ? trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null : null), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"slippageTolerance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    defaultValue: defaultSlippage,\n    min: 0,\n    max: 100,\n    precision: 2,\n    formatter: value => `${value}%`,\n    parser: value => value.replace('%', ''),\n    onChange: value => {\n      console.log(value);\n      let slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n      setSlippageTolerance(slippagePercent);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"amountInMax\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }\n  }, amountInMax ? amountInMax.toExact() : null), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"amountOutMin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }\n  }, amountOutMin ? amountOutMin.toExact() : null), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"timeLimitInSeconds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    min: 0,\n    max: 3600,\n    defaultValue: defaultTimeLimit,\n    onChange: value => {\n      console.log(value);\n      setTimeLimit(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 54\n    }\n  })))));\n}\n\nexport default Swap;","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/Swap.jsx"],"names":["React","useState","useEffect","Space","Row","InputNumber","Card","notification","Select","Descriptions","Typography","Button","Divider","Tooltip","Drawer","Modal","SettingOutlined","RetweetOutlined","ChainId","Token","WETH","Fetcher","Trade","TokenAmount","Percent","parseUnits","formatUnits","ethers","useBlockNumber","usePoller","abi","IUniswapV2Router02ABI","useDebounce","Option","Text","ROUTER_ADDRESS","ZERO_ADDRESS","erc20Abi","makeCall","callName","contract","args","metadata","result","console","log","defaultToken","defaultTokenOut","defaultSlippage","defaultTimeLimit","tokenListToObject","array","reduce","obj","item","symbol","chainId","address","decimals","name","Swap","selectedProvider","tokenListURI","tokenIn","setTokenIn","tokenOut","setTokenOut","exact","setExact","amountIn","setAmountIn","amountInMax","setAmountInMax","amountOut","setAmountOut","amountOutMin","setAmountOutMin","trades","setTrades","routerAllowance","setRouterAllowance","balanceIn","setBalanceIn","balanceOut","setBalanceOut","slippageTolerance","setSlippageTolerance","Math","round","toString","timeLimit","setTimeLimit","swapping","setSwapping","approving","setApproving","settingsVisible","setSettingsVisible","swapModalVisible","setSwapModalVisible","tokenList","setTokenList","tokens","setTokens","invertPrice","setInvertPrice","blockNumber","signer","getSigner","routerContract","Contract","_tokenListUri","debouncedAmountIn","debouncedAmountOut","activeChainId","process","env","REACT_APP_NETWORK","KOVAN","MAINNET","getTokenList","fetch","tokenListJson","json","filteredTokens","filter","t","ethToken","logoURI","_tokenList","_tokens","e","getTrades","pairs","arr","map","v","i","slice","w","flat","baseTokens","includes","el","listOfPairwiseTokens","getPairs","list","listOfPromises","fetchPairData","Promise","all","p","catch","undefined","listOfPairs","bestTrade","bestTradeExactIn","maxNumResults","maxHops","outputAmount","toSignificant","bestTradeExactOut","inputAmount","minimumAmountOut","maximumAmountIn","getBalance","_token","_account","_contract","newBalance","getAccountInfo","accountList","listAccounts","tempContractIn","newBalanceIn","allowance","tempContractOut","newBalanceOut","route","length","path","updateRouterAllowance","newAllowance","tempContract","open","message","description","approveRouter","approvalAmount","utils","hexlify","raw","approval","removeRouterAllowance","removal","executeSwap","call","deadline","floor","Date","now","_amountIn","_amountOutMin","BigNumber","from","_amountOut","_amountInMax","hash","showSwapModal","handleSwapModalOk","handleSwapModalCancel","insufficientBalance","parseFloat","inputIsToken","insufficientAllowance","formattedBalanceIn","toPrecision","formattedBalanceOut","metaIn","metaOut","cleanIpfsURI","uri","replace","logoIn","logoOut","rawPrice","executionPrice","price","priceDescription","invert","priceWidget","swapModal","width","textAlign","value","input","option","children","toLowerCase","indexOf","token","join","nextMidPrice","priceImpact","slippagePercent","toExact"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Space, Row, InputNumber, Card, notification, Select, Descriptions, Typography, Button, Divider, Tooltip, Drawer, Modal } from \"antd\";\nimport { SettingOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { ChainId, Token, WETH, Fetcher, Trade, TokenAmount, Percent } from '@uniswap/sdk'\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nconst erc20Abi = [\n    \"function balanceOf(address owner) view returns (uint256)\",\n    \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n    \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\"\n];\n\nconst makeCall = async (callName, contract, args, metadata={}) => {\n  if(contract[callName]) {\n    let result\n    if(args) {\n      result = await contract[callName](...args, metadata)\n    } else {\n      result = await contract[callName]()\n    }\n    return result\n  } else {\n    console.log('no call of that name!')\n  }\n}\n\nlet defaultToken = 'ETH'\nlet defaultTokenOut = 'DAI'\nlet defaultSlippage = '0.5'\nlet defaultTimeLimit = 60 * 10\n\nconst tokenListToObject = (array) =>\n   array.reduce((obj, item) => {\n     obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name)\n     return obj\n   }, {})\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n\n  const [tokenIn, setTokenIn] = useState(defaultToken)\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut)\n  const [exact, setExact] = useState()\n  const [amountIn, setAmountIn] = useState()\n  const [amountInMax, setAmountInMax] = useState()\n  const [amountOut, setAmountOut] = useState()\n  const [amountOutMin, setAmountOutMin] = useState()\n  const [trades, setTrades] = useState()\n  const [routerAllowance, setRouterAllowance] = useState()\n  const [balanceIn, setBalanceIn] = useState()\n  const [balanceOut, setBalanceOut] = useState()\n  const [slippageTolerance, setSlippageTolerance] = useState(new Percent(Math.round(defaultSlippage*100).toString(), \"10000\"))\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit)\n  const [swapping, setSwapping] = useState(false)\n  const [approving, setApproving] = useState(false)\n  const [settingsVisible, setSettingsVisible] = useState(false)\n  const [swapModalVisible, setSwapModalVisible] = useState(false)\n\n  const [tokenList, setTokenList] = useState([])\n\n  const [tokens, setTokens] = useState()\n\n  const [invertPrice, setInvertPrice] = useState(false)\n\n  let blockNumber = useBlockNumber(selectedProvider, 3000)\n\n  let signer = selectedProvider.getSigner()\n  let routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  let _tokenListUri = tokenListURI ? tokenListURI : 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = (process.env.REACT_APP_NETWORK === 'kovan' ? ChainId.KOVAN : ChainId.MAINNET)\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri)\n      try {\n      let tokenList = await fetch(_tokenListUri)\n      let tokenListJson = await tokenList.json()\n      let filteredTokens = tokenListJson.tokens.filter(function (t) {\n        return t.chainId === activeChainId\n      })\n      let ethToken = WETH[activeChainId]\n      ethToken.name = 'Ethereum'\n      ethToken.symbol = 'ETH'\n      ethToken.logoURI = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\"\n      let _tokenList = [ethToken, ...filteredTokens]\n      setTokenList(_tokenList)\n      let _tokens = tokenListToObject(_tokenList)\n      setTokens(_tokens)\n    } catch (e) {\n      console.log(e)\n    }\n    }\n    getTokenList()\n  },[tokenListURI])\n\n  const getTrades = async () => {\n    if(tokenIn && tokenOut && (amountIn || amountOut)) {\n\n    let pairs = (arr) => arr.map( (v, i) => arr.slice(i + 1).map(w => [v,w]) ).flat();\n\n    let baseTokens = tokenList.filter(function (t) {\n      return ['DAI', 'USDC', 'USDT', 'COMP', 'ETH', 'MKR', 'LINK', tokenIn, tokenOut].includes(t.symbol)\n    }).map((el) => {\n      return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name)\n    })\n\n    let listOfPairwiseTokens = pairs(baseTokens)\n\n    const getPairs = async (list) => {\n\n      let listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider))\n      return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n    }\n\n    let listOfPairs = await getPairs(listOfPairwiseTokens)\n\n    let bestTrade\n\n    if(exact === 'in') {\n      setAmountInMax()\n      bestTrade = Trade.bestTradeExactIn(\n      listOfPairs.filter(item => item),\n      new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n      tokens[tokenOut], { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountOut(bestTrade[0].outputAmount.toSignificant(6))\n      } else { setAmountOut() }\n    } else if (exact === 'out') {\n      setAmountOutMin()\n      bestTrade = Trade.bestTradeExactOut(\n      listOfPairs.filter(item => item),\n      tokens[tokenIn],\n      new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n     { maxNumResults: 3, maxHops: 1 })\n      if(bestTrade[0]) {\n        setAmountIn(bestTrade[0].inputAmount.toSignificant(6))\n      } else { setAmountIn() }\n    }\n\n    setTrades(bestTrade)\n\n    console.log(bestTrade)\n\n  }\n  }\n\n  useEffect(() => {\n      getTrades()\n  },[tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider])\n\n  useEffect(() => {\n    if(trades && trades[0]) {\n      if(exact === 'in') {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance))\n      } else if (exact === 'out') {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance))\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades])\n\n  const getBalance = async (_token, _account, _contract) => {\n\n    let newBalance\n    if(_token === 'ETH') {\n      newBalance = await selectedProvider.getBalance(_account)\n    } else {\n      newBalance = await makeCall('balanceOf', _contract, [_account])\n    }\n    return newBalance\n  }\n\n  const getAccountInfo = async () => {\n\n    if(tokens) {\n\n      let accountList = await selectedProvider.listAccounts()\n\n      if(tokenIn) {\n        let tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        let newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn)\n        setBalanceIn(newBalanceIn)\n\n        let allowance\n\n        if(tokenIn === 'ETH') {\n          setRouterAllowance()\n        } else {\n          allowance = await makeCall('allowance',tempContractIn,[accountList[0],ROUTER_ADDRESS])\n          setRouterAllowance(allowance)\n        }\n        }\n\n      if(tokenOut) {\n        let tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        let newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut)\n        setBalanceOut(newBalanceOut)\n      }\n    }\n  }\n\n  usePoller(getAccountInfo, 6000)\n\n  let route = trades ? (trades.length > 0 ? trades[0].route.path.map(function(item) {\n    return item['symbol'];\n  }) : []) : []\n\n  const updateRouterAllowance = async (newAllowance) => {\n    setApproving(true)\n    try {\n    let tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n    let result = await makeCall('approve', tempContract, [ROUTER_ADDRESS, newAllowance])\n    console.log(result)\n    setApproving(false)\n    return true\n  } catch(e) {\n      notification.open({\n        message: 'Approval unsuccessful',\n        description:\n        `Error: ${e.message}`,\n      });\n    }\n  }\n\n  const approveRouter = async () => {\n    let approvalAmount = exact === 'in' ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals)) : amountInMax.raw.toString()\n    console.log(approvalAmount)\n    let approval = updateRouterAllowance(approvalAmount)\n    if(approval) {\n      notification.open({\n        message: 'Token transfer approved',\n        description:\n        `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  }\n\n  const removeRouterAllowance = async () => {\n    let approvalAmount = ethers.utils.hexlify(0)\n    console.log(approvalAmount)\n    let removal = updateRouterAllowance(approvalAmount)\n    if(removal) {\n      notification.open({\n        message: 'Token approval removed',\n        description:\n        `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  }\n\n  const executeSwap = async () => {\n    setSwapping(true)\n    try {\n      let args\n      let metadata = {}\n\n      let call\n      let deadline = Math.floor(Date.now() / 1000) + timeLimit\n      let path = trades[0].route.path.map(function(item) {\n        return item['address'];\n      })\n      console.log(path)\n      let accountList = await selectedProvider.listAccounts()\n      let address = accountList[0]\n\n      if (exact === 'in') {\n        let _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        let _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapExactETHForTokens'\n          args = [_amountOutMin, path, address, deadline]\n          metadata['value'] = _amountIn\n        } else {\n          call = tokenOut === 'ETH' ? 'swapExactTokensForETH' : 'swapExactTokensForTokens'\n          args = [_amountIn, _amountOutMin, path, address, deadline]\n        }\n      } else if (exact === 'out') {\n        let _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals))\n        let _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()))\n        if (tokenIn === 'ETH') {\n          call = 'swapETHForExactTokens'\n          args = [_amountOut, path, address, deadline]\n          metadata['value'] = _amountInMax\n        } else {\n          call = tokenOut === 'ETH' ? 'swapTokensForExactETH' : 'swapTokensForExactTokens'\n          args = [_amountOut, _amountInMax, path, address, deadline]\n        }\n      }\n      console.log(call, args, metadata)\n      let result = await makeCall(call, routerContract, args, metadata)\n      console.log(result)\n      notification.open({\n        message: 'Swap complete 🦄',\n        description:\n        <><Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text><Text copyable>{result.hash}</Text></>,\n      });\n      setSwapping(false)\n  } catch (e) {\n    console.log(e)\n    setSwapping(false)\n    notification.open({\n      message: 'Swap unsuccessful',\n      description:\n      `Error: ${e.message}`,\n    });\n  }\n  }\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap()\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  let insufficientBalance = balanceIn ? parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)) < amountIn : null\n  let inputIsToken = tokenIn !== 'ETH'\n  let insufficientAllowance = !inputIsToken ? false : routerAllowance ? parseFloat(formatUnits(routerAllowance,tokens[tokenIn].decimals)) < amountIn : null\n  let formattedBalanceIn = balanceIn?parseFloat(formatUnits(balanceIn,tokens[tokenIn].decimals)).toPrecision(6):null\n  let formattedBalanceOut = balanceOut?parseFloat(formatUnits(balanceOut,tokens[tokenOut].decimals)).toPrecision(6):null\n\n  let metaIn = tokens && tokenList && tokenIn ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenIn].address\n  })[0] : null\n  let metaOut = tokens && tokenList && tokenOut ? tokenList.filter(function (t) {\n    return t.address === tokens[tokenOut].address\n    })[0] : null\n\n  const cleanIpfsURI = (uri) => {\n    try {\n    return (uri).replace('ipfs://','https://ipfs.io/ipfs/')\n  } catch(e) {\n    console.log(e, uri)\n    return uri\n  }\n  }\n\n  let logoIn = metaIn?cleanIpfsURI(metaIn.logoURI):null\n  let logoOut = metaOut?cleanIpfsURI(metaOut.logoURI):null\n\n  let rawPrice = trades&&trades[0]?trades[0].executionPrice:null\n  let price = rawPrice?rawPrice.toSignificant(7):null\n  let priceDescription = rawPrice ? (invertPrice ? `${(rawPrice.invert()).toSignificant(7)} ${tokenIn} per ${tokenOut}` : `${price} ${tokenOut} per ${tokenIn}`) : null\n\n  let priceWidget = (\n    <Space>\n    <Text type=\"secondary\">{priceDescription}</Text>\n    <Button type=\"text\" onClick={() => {setInvertPrice(!invertPrice)}}><RetweetOutlined /></Button>\n    </Space>\n  )\n\n  let swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row><Space><img src={logoIn} alt={tokenIn} width='30'/>{amountIn}{tokenIn}</Space></Row>\n      <Row justify='center' align='middle' style={{width:30}}><span>↓</span></Row>\n      <Row><Space><img src={logoOut} alt={tokenOut} width='30'/>{amountOut}{tokenOut}</Space></Row>\n      <Divider/>\n      <Row>{priceWidget}</Row>\n      <Row>{trades&&((amountOutMin && exact==='in') || (amountInMax && exact==='out'))?(exact==='in'?`Output is estimated. You will receive at least ${amountOutMin.toSignificant(6)} ${tokenOut} or the transaction will revert.`:`Input is estimated. You will sell at most ${amountInMax.toSignificant(6)} ${tokenIn} or the transaction will revert.`):null}</Row>\n    </Modal>\n  )\n\n  return (\n    <Card title={<Space><img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width='40' alt='uniswapLogo'/><Typography>Uniswapper</Typography></Space>} extra={<Button type=\"text\" onClick={() => {setSettingsVisible(true)}}><SettingOutlined /></Button>}>\n    <Space direction=\"vertical\">\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`From${exact==='out' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoIn} alt={tokenIn} width='30'/><Button type=\"link\" onClick={() => {\n      setAmountOut()\n      setAmountIn(formatUnits(balanceIn,tokens[tokenIn].decimals))\n      setAmountOutMin()\n      setAmountInMax()\n      setExact('in')\n    }}>{formattedBalanceIn}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} min={0} size={'large'} value={amountIn} onChange={(e) => {\n        setAmountOut()\n        setTrades()\n        setAmountIn(e)\n        setExact('in')\n      }}/>\n      <Select showSearch value={tokenIn} style={{width: '120px'}} size={'large'} bordered={false} defaultValue={defaultToken} onChange={(value) => {\n        console.log(value)\n        if(value===tokenOut) {\n          console.log('switch!', tokenIn)\n          setTokenOut(tokenIn)\n          setAmountOut(amountIn)\n          setBalanceOut(balanceIn)\n        }\n        setTokenIn(value)\n        setTrades()\n        setAmountIn()\n        setExact('out')\n        setBalanceIn()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      <Tooltip title={route.join(\"->\")}><span>↓</span></Tooltip>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Card size=\"small\" type=\"inner\" title={`To${exact==='in' && tokenIn && tokenOut?' (estimate)':''}`} extra={<><img src={logoOut} width='30' alt={tokenOut}/><Button type=\"text\">{formattedBalanceOut}</Button></>} style={{ width: 400, textAlign: 'left' }}>\n      <InputNumber style={{width: '160px'}} size={'large'} min={0} value={amountOut} onChange={(e) => {\n        setAmountOut(e)\n        setAmountIn()\n        setTrades()\n        setExact('out')\n      }}/>\n      <Select showSearch value={tokenOut} style={{width: '120px'}} size={'large'} bordered={false} onChange={(value) => {\n        console.log(value, tokenIn, tokenOut)\n        if(value===tokenIn) {\n          console.log('switch!', tokenOut)\n          setTokenIn(tokenOut)\n          setAmountIn(amountOut)\n          setBalanceIn(balanceOut)\n        }\n        setTokenOut(value)\n        setExact('in')\n        setAmountOut()\n        setTrades()\n        setBalanceOut()\n      }} filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      } optionFilterProp=\"children\">\n      {tokenList.map(token => (\n        <Option key={token.symbol} value={token.symbol}>{token.symbol}</Option>\n      ))}\n      </Select>\n    </Card>\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n      {priceDescription?priceWidget:null}\n    </Row>\n    <Row justify=\"center\" align=\"middle\">\n    <Space>\n      {inputIsToken?<Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>{(!insufficientAllowance&&amountIn&&amountOut)?'Approved':'Approve'}</Button>:null}\n      <Button size=\"large\" loading={swapping} disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut} onClick={showSwapModal}>{insufficientBalance?'Insufficient balance':'Swap!'}</Button>\n      {swapModal}\n    </Space>\n    </Row>\n    </Space>\n    <Drawer visible={settingsVisible} onClose={() => { setSettingsVisible(false) }} width={500}>\n    <Descriptions title=\"Details\" column={1} style={{textAlign: 'left'}}>\n      <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n      <Descriptions.Item label=\"routerAllowance\"><Space>{routerAllowance?formatUnits(routerAllowance,tokens[tokenIn].decimals):null}{routerAllowance>0?<Button onClick={removeRouterAllowance}>Remove Allowance</Button>:null}</Space></Descriptions.Item>\n      <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n      <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n      <Descriptions.Item label=\"bestPrice\">{trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"nextMidPrice\">{trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"priceImpact\">{trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}</Descriptions.Item>\n      <Descriptions.Item label=\"slippageTolerance\">{<InputNumber\n        defaultValue={defaultSlippage}\n        min={0}\n        max={100}\n        precision={2}\n        formatter={value => `${value}%`}\n        parser={value => value.replace('%', '')}\n        onChange={(value) => {\n          console.log(value)\n\n         let slippagePercent = new Percent(Math.round(value*100).toString(), \"10000\")\n         setSlippageTolerance(slippagePercent)\n       }}\n      />}</Descriptions.Item>\n      <Descriptions.Item label=\"amountInMax\">{amountInMax?amountInMax.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"amountOutMin\">{amountOutMin?amountOutMin.toExact():null}</Descriptions.Item>\n      <Descriptions.Item label=\"timeLimitInSeconds\">{<InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={(value) => {\n              console.log(value)\n              setTimeLimit(value)\n             }}\n            />}</Descriptions.Item>\n    </Descriptions>\n    </Drawer>\n    </Card>\n  )\n\n}\n\nexport default Swap;\n"]},"metadata":{},"sourceType":"module"}