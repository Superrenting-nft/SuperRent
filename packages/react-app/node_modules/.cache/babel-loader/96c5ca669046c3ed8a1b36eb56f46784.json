{"ast":null,"code":"var numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' + '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' + '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' + '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nexports.KANJI = new RegExp(kanji, 'g');\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nexports.BYTE = new RegExp(byte, 'g');\nexports.NUMERIC = new RegExp(numeric, 'g');\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\n\nexports.testKanji = function testKanji(str) {\n  return TEST_KANJI.test(str);\n};\n\nexports.testNumeric = function testNumeric(str) {\n  return TEST_NUMERIC.test(str);\n};\n\nexports.testAlphanumeric = function testAlphanumeric(str) {\n  return TEST_ALPHANUMERIC.test(str);\n};","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/qrcode/lib/core/regex.js"],"names":["numeric","alphanumeric","kanji","replace","byte","exports","KANJI","RegExp","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","str","test","testNumeric","testAlphanumeric"],"mappings":"AAAA,IAAIA,OAAO,GAAG,QAAd;AACA,IAAIC,YAAY,GAAG,mBAAnB;AACA,IAAIC,KAAK,GAAG,kDACV,gEADU,GAEV,uDAFU,GAGV,kDAHF;AAIAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,IAAd,EAAoB,KAApB,CAAR;AAEA,IAAIC,IAAI,GAAG,+BAA+BF,KAA/B,GAAuC,iBAAlD;AAEAG,OAAO,CAACC,KAAR,GAAgB,IAAIC,MAAJ,CAAWL,KAAX,EAAkB,GAAlB,CAAhB;AACAG,OAAO,CAACG,UAAR,GAAqB,IAAID,MAAJ,CAAW,uBAAX,EAAoC,GAApC,CAArB;AACAF,OAAO,CAACI,IAAR,GAAe,IAAIF,MAAJ,CAAWH,IAAX,EAAiB,GAAjB,CAAf;AACAC,OAAO,CAACK,OAAR,GAAkB,IAAIH,MAAJ,CAAWP,OAAX,EAAoB,GAApB,CAAlB;AACAK,OAAO,CAACM,YAAR,GAAuB,IAAIJ,MAAJ,CAAWN,YAAX,EAAyB,GAAzB,CAAvB;AAEA,IAAIW,UAAU,GAAG,IAAIL,MAAJ,CAAW,MAAML,KAAN,GAAc,GAAzB,CAAjB;AACA,IAAIW,YAAY,GAAG,IAAIN,MAAJ,CAAW,MAAMP,OAAN,GAAgB,GAA3B,CAAnB;AACA,IAAIc,iBAAiB,GAAG,IAAIP,MAAJ,CAAW,wBAAX,CAAxB;;AAEAF,OAAO,CAACU,SAAR,GAAoB,SAASA,SAAT,CAAoBC,GAApB,EAAyB;AAC3C,SAAOJ,UAAU,CAACK,IAAX,CAAgBD,GAAhB,CAAP;AACD,CAFD;;AAIAX,OAAO,CAACa,WAAR,GAAsB,SAASA,WAAT,CAAsBF,GAAtB,EAA2B;AAC/C,SAAOH,YAAY,CAACI,IAAb,CAAkBD,GAAlB,CAAP;AACD,CAFD;;AAIAX,OAAO,CAACc,gBAAR,GAA2B,SAASA,gBAAT,CAA2BH,GAA3B,EAAgC;AACzD,SAAOF,iBAAiB,CAACG,IAAlB,CAAuBD,GAAvB,CAAP;AACD,CAFD","sourcesContent":["var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n"]},"metadata":{},"sourceType":"script"}