{"ast":null,"code":";\n\n(function (global) {\n  'use strict';\n\n  var nextTick = function (fn) {\n    setTimeout(fn, 0);\n  };\n\n  if (typeof process != 'undefined' && process && typeof process.nextTick == 'function') {\n    // node.js and the like\n    nextTick = process.nextTick;\n  }\n\n  function semaphore(capacity) {\n    var semaphore = {\n      capacity: capacity || 1,\n      current: 0,\n      queue: [],\n      firstHere: false,\n      take: function () {\n        if (semaphore.firstHere === false) {\n          semaphore.current++;\n          semaphore.firstHere = true;\n          var isFirst = 1;\n        } else {\n          var isFirst = 0;\n        }\n\n        var item = {\n          n: 1\n        };\n\n        if (typeof arguments[0] == 'function') {\n          item.task = arguments[0];\n        } else {\n          item.n = arguments[0];\n        }\n\n        if (arguments.length >= 2) {\n          if (typeof arguments[1] == 'function') item.task = arguments[1];else item.n = arguments[1];\n        }\n\n        var task = item.task;\n\n        item.task = function () {\n          task(semaphore.leave);\n        };\n\n        if (semaphore.current + item.n - isFirst > semaphore.capacity) {\n          if (isFirst === 1) {\n            semaphore.current--;\n            semaphore.firstHere = false;\n          }\n\n          return semaphore.queue.push(item);\n        }\n\n        semaphore.current += item.n - isFirst;\n        item.task(semaphore.leave);\n        if (isFirst === 1) semaphore.firstHere = false;\n      },\n      leave: function (n) {\n        n = n || 1;\n        semaphore.current -= n;\n\n        if (!semaphore.queue.length) {\n          if (semaphore.current < 0) {\n            throw new Error('leave called too many times.');\n          }\n\n          return;\n        }\n\n        var item = semaphore.queue[0];\n\n        if (item.n + semaphore.current > semaphore.capacity) {\n          return;\n        }\n\n        semaphore.queue.shift();\n        semaphore.current += item.n;\n        nextTick(item.task);\n      },\n      available: function (n) {\n        n = n || 1;\n        return semaphore.current + n <= semaphore.capacity;\n      }\n    };\n    return semaphore;\n  }\n\n  ;\n\n  if (typeof exports === 'object') {\n    // node export\n    module.exports = semaphore;\n  } else if (typeof define === 'function' && define.amd) {\n    // amd export\n    define(function () {\n      return semaphore;\n    });\n  } else {\n    // browser global\n    global.semaphore = semaphore;\n  }\n})(this);","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/semaphore/lib/semaphore.js"],"names":["global","nextTick","fn","setTimeout","process","semaphore","capacity","current","queue","firstHere","take","isFirst","item","n","arguments","task","length","leave","push","Error","shift","available","exports","module","define","amd"],"mappings":"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","sourcesContent":[";(function(global) {\n\n'use strict';\n\nvar nextTick = function (fn) { setTimeout(fn, 0); }\nif (typeof process != 'undefined' && process && typeof process.nextTick == 'function') {\n\t// node.js and the like\n\tnextTick = process.nextTick;\n}\n\nfunction semaphore(capacity) {\n\tvar semaphore = {\n\t\tcapacity: capacity || 1,\n\t\tcurrent: 0,\n\t\tqueue: [],\n\t\tfirstHere: false,\n\n\t\ttake: function() {\n\t\t\tif (semaphore.firstHere === false) {\n        \t\t\tsemaphore.current++;\n        \t\t\tsemaphore.firstHere = true;\n        \t\t\tvar isFirst = 1;\n      \t\t\t} else {\n        \t\t\tvar isFirst = 0;\n      \t\t\t}\n\t\t\tvar item = { n: 1 };\n\n\t\t\tif (typeof arguments[0] == 'function') {\n\t\t\t\titem.task = arguments[0];\n\t\t\t} else {\n\t\t\t\titem.n = arguments[0];\n\t\t\t}\n\n\t\t\tif (arguments.length >= 2)  {\n\t\t\t\tif (typeof arguments[1] == 'function') item.task = arguments[1];\n\t\t\t\telse item.n = arguments[1];\n\t\t\t}\n\n\t\t\tvar task = item.task;\n\t\t\titem.task = function() { task(semaphore.leave); };\n\n\t\t\tif (semaphore.current + item.n - isFirst > semaphore.capacity) {\n        \t\t\tif (isFirst === 1) {\n        \t\t\t\tsemaphore.current--;\n        \t\t\t\tsemaphore.firstHere = false;\n        \t\t\t}\n\t\t\t\treturn semaphore.queue.push(item);\n\t\t\t}\n\n\t\t\tsemaphore.current += item.n - isFirst;\n\t\t\titem.task(semaphore.leave);\n      \t\t\tif (isFirst === 1) semaphore.firstHere = false;\n\t\t},\n\n\t\tleave: function(n) {\n\t\t\tn = n || 1;\n\n\t\t\tsemaphore.current -= n;\n\n\t\t\tif (!semaphore.queue.length) {\n\t\t\t\tif (semaphore.current < 0) {\n\t\t\t\t\tthrow new Error('leave called too many times.');\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = semaphore.queue[0];\n\n\t\t\tif (item.n + semaphore.current > semaphore.capacity) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsemaphore.queue.shift();\n\t\t\tsemaphore.current += item.n;\n\n\t\t\tnextTick(item.task);\n\t\t},\n\n\t\tavailable: function(n) {\n\t\t\tn = n || 1;\n\t\t\treturn(semaphore.current + n <= semaphore.capacity);\n\t\t}\n\t};\n\n\treturn semaphore;\n};\n\nif (typeof exports === 'object') {\n    // node export\n    module.exports = semaphore;\n} else if (typeof define === 'function' && define.amd) {\n    // amd export\n    define(function () {\n        return semaphore;\n    });\n} else {\n    // browser global\n    global.semaphore = semaphore;\n}\n}(this));\n"]},"metadata":{},"sourceType":"script"}