{"ast":null,"code":"var _jsxFileName = \"/Users/Antonio/Desktop/SuperRent/packages/react-app/src/views/Subgraph.jsx\";\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button, Typography, Table, Input } from \"antd\";\nimport { useQuery, gql } from '@apollo/client';\nimport { Address } from \"../components\";\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport fetch from 'isomorphic-fetch';\nconst highlight = {\n  marginLeft: 4,\n  marginRight: 8,\n\n  /*backgroundColor: \"#f9f9f9\",*/\n  padding: 4,\n  borderRadius: 4,\n  fontWeight: \"bolder\"\n};\n\nfunction Subgraph(props) {\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphQLParams)\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `;\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\n  const {\n    loading,\n    data\n  } = useQuery(EXAMPLE_GQL, {\n    pollInterval: 2500\n  });\n  const purposeColumns = [{\n    title: 'Purpose',\n    dataIndex: 'purpose',\n    key: 'purpose'\n  }, {\n    title: 'Sender',\n    key: 'id',\n    render: record => /*#__PURE__*/React.createElement(Address, {\n      value: record.sender.id,\n      ensProvider: props.mainnetProvider,\n      fontSize: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }\n    })\n  }, {\n    title: 'createdAt',\n    key: 'createdAt',\n    dataIndex: 'createdAt',\n    render: d => new Date(d * 1000).toISOString()\n  }];\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n  const deployWarning = /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8,\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Warning: 🤔 Have you deployed your subgraph yet?\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"You will find that parsing/tracking events with the \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 65\n    }\n  }, \"useEventListener\"), \" hook becomes a chore for every new project.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"auto\",\n      marginTop: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Instead, you can use \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://thegraph.com/docs/introduction\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }\n  }, \"The Graph\"), \" with \\uD83C\\uDFD7 scaffold-eth (\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://youtu.be/T5ylzOTkn-Q\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 161\n    }\n  }, \"learn more\"), \"):\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDEAE\"), \"Clean up previous data:\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"rm -rf docker/graph-node/data/\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDCE1\"), \"Spin up a local graph node by running\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"yarn graph-run-node\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \" (requires \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.docker.com/products/docker-desktop\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 55\n    }\n  }, \" Docker\"), \") \")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDCDD\"), \"Create your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"local subgraph\"), \" by running\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"yarn graph-create-local\"), \"(only required once!)\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDEA2\"), \"Deploy your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"local subgraph\"), \" by running\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"yarn graph-ship-local\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDD8D\\uFE0F\"), \"Edit your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, \"local subgraph\"), \" in\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"packages/subgraph/src\"), \"(learn more about subgraph definition \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://thegraph.com/docs/define-a-subgraph\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 52\n    }\n  }, \"here\"), \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDD29\"), \"Deploy your \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"contracts and your subgraph\"), \" in one go by running\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"highlight\",\n    style: highlight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"yarn deploy-and-graph\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 780,\n      margin: \"auto\",\n      paddingBottom: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32,\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => {\n      setNewPurpose(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      console.log(\"newPurpose\", newPurpose);\n      /* look how you call setPurpose on your contract: */\n\n      props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Set Purpose\")), data ? /*#__PURE__*/React.createElement(Table, {\n    dataSource: data.purposes,\n    columns: purposeColumns,\n    rowKey: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 95\n    }\n  }, loading ? \"Loading...\" : deployWarning), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 32,\n      height: 400,\n      border: \"1px solid #888888\",\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GraphiQL, {\n    fetcher: graphQLFetcher,\n    docExplorerOpen: true,\n    query: EXAMPLE_GRAPHQL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"...\"));\n}\n\nexport default Subgraph;","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/packages/react-app/src/views/Subgraph.jsx"],"names":["React","useState","Button","Typography","Table","Input","useQuery","gql","Address","GraphiQL","fetch","highlight","marginLeft","marginRight","padding","borderRadius","fontWeight","Subgraph","props","graphQLFetcher","graphQLParams","subgraphUri","method","headers","body","JSON","stringify","then","response","json","EXAMPLE_GRAPHQL","EXAMPLE_GQL","loading","data","pollInterval","purposeColumns","title","dataIndex","key","render","record","sender","id","mainnetProvider","d","Date","toISOString","newPurpose","setNewPurpose","deployWarning","marginTop","margin","width","paddingBottom","textAlign","e","target","value","console","log","tx","writeContracts","YourContract","setPurpose","purposes","height","border"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button, Typography, Table, Input } from \"antd\";\nimport { useQuery, gql } from '@apollo/client';\nimport { Address } from \"../components\";\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport fetch from 'isomorphic-fetch';\n\n  const highlight = { marginLeft: 4, marginRight: 8, /*backgroundColor: \"#f9f9f9\",*/ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }\n\nfunction Subgraph(props) {\n\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL)\n  const { loading, data } = useQuery(EXAMPLE_GQL,{pollInterval: 2500});\n\n  const purposeColumns = [\n    {\n      title: 'Purpose',\n      dataIndex: 'purpose',\n      key: 'purpose',\n    },\n    {\n      title: 'Sender',\n      key: 'id',\n      render: (record) => <Address\n                        value={record.sender.id}\n                        ensProvider={props.mainnetProvider}\n                        fontSize={16}\n                      />\n    },\n    {\n      title: 'createdAt',\n      key: 'createdAt',\n      dataIndex: 'createdAt',\n      render: d => (new Date(d * 1000)).toISOString()\n    },\n    ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n\n  const deployWarning = (\n    <div style={{marginTop:8,padding:8}}>{\"Warning: 🤔 Have you deployed your subgraph yet?\"}</div>\n  )\n\n  return (\n      <>\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\n            You will find that parsing/tracking events with the <span class=\"highlight\" style={highlight}>useEventListener</span> hook becomes a chore for every new project.\n          </div>\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\n            Instead, you can use <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">The Graph</a> with 🏗 scaffold-eth (<a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\">learn more</a>):\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🚮</span>\n            Clean up previous data:\n            <span class=\"highlight\" style={highlight}>\n              rm -rf docker/graph-node/data/\n            </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>📡</span>\n            Spin up a local graph node by running\n            <span class=\"highlight\" style={highlight}>\n              yarn graph-run-node\n            </span>\n            <span style={{ marginLeft: 4}}> (requires <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\"> Docker</a>) </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>📝</span>\n            Create your <b>local subgraph</b> by running\n            <span class=\"highlight\" style={highlight}>\n              yarn graph-create-local\n            </span>\n            (only required once!)\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🚢</span>\n            Deploy your <b>local subgraph</b> by running\n            <span class=\"highlight\" style={highlight}>\n              yarn graph-ship-local\n            </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🖍️</span>\n            Edit your <b>local subgraph</b> in\n            <span class=\"highlight\" style={highlight}>\n              packages/subgraph/src\n            </span>\n             (learn more about subgraph definition <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>)\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🤩</span>\n            Deploy your <b>contracts and your subgraph</b> in one go by running\n            <span class=\"highlight\" style={highlight}>\n              yarn deploy-and-graph\n            </span>\n          </div>\n\n          <div style={{width:780, margin: \"auto\", paddingBottom:64}}>\n\n            <div style={{margin:32, textAlign:'right'}}>\n              <Input onChange={(e)=>{setNewPurpose(e.target.value)}} />\n              <Button onClick={()=>{\n                console.log(\"newPurpose\",newPurpose)\n                /* look how you call setPurpose on your contract: */\n                props.tx( props.writeContracts.YourContract.setPurpose(newPurpose) )\n              }}>Set Purpose</Button>\n            </div>\n\n            {data?<Table dataSource={data.purposes} columns={purposeColumns} rowKey={\"id\"} />:<Typography>{(loading?\"Loading...\":deployWarning)}</Typography>}\n\n            <div style={{margin:32, height:400, border:\"1px solid #888888\", textAlign:'left'}}>\n              <GraphiQL fetcher={graphQLFetcher} docExplorerOpen={true} query={EXAMPLE_GRAPHQL}/>\n            </div>\n\n          </div>\n\n          <div style={{padding:64}}>\n          ...\n          </div>\n      </>\n  );\n}\n\nexport default Subgraph;\n"]},"metadata":{},"sourceType":"module"}