{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.aesCbcDecryptSync = exports.aesCbcEncryptSync = void 0;\n\nconst helpers_1 = require(\"../helpers\");\n\nfunction aesCbcEncryptSync(iv, key, data) {\n  let result;\n\n  if (helpers_1.isNode()) {\n    result = helpers_1.nodeAesEncrypt(iv, key, data);\n  } else {\n    result = helpers_1.fallbackAesEncrypt(iv, key, data);\n  }\n\n  return result;\n}\n\nexports.aesCbcEncryptSync = aesCbcEncryptSync;\n\nfunction aesCbcDecryptSync(iv, key, data) {\n  let result;\n\n  if (helpers_1.isNode()) {\n    result = helpers_1.nodeAesDecrypt(iv, key, data);\n  } else {\n    result = helpers_1.fallbackAesDecrypt(iv, key, data);\n  }\n\n  return result;\n}\n\nexports.aesCbcDecryptSync = aesCbcDecryptSync;","map":{"version":3,"sources":["../../../src/aes/sync.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAQA,SAAgB,iBAAhB,CACE,EADF,EAEE,GAFF,EAGE,IAHF,EAGkB;AAEhB,MAAI,MAAJ;;AACA,MAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,IAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,EAAf,EAAmB,GAAnB,EAAwB,IAAxB,CAAT;AACD,GAFD,MAEO;AACL,IAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,EAAnB,EAAuB,GAAvB,EAA4B,IAA5B,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAZD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAcA,SAAgB,iBAAhB,CACE,EADF,EAEE,GAFF,EAGE,IAHF,EAGkB;AAEhB,MAAI,MAAJ;;AACA,MAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,IAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,EAAf,EAAmB,GAAnB,EAAwB,IAAxB,CAAT;AACD,GAFD,MAEO;AACL,IAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,EAAnB,EAAuB,GAAvB,EAA4B,IAA5B,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAZD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aesCbcDecryptSync = exports.aesCbcEncryptSync = void 0;\nconst helpers_1 = require(\"../helpers\");\nfunction aesCbcEncryptSync(iv, key, data) {\n    let result;\n    if (helpers_1.isNode()) {\n        result = helpers_1.nodeAesEncrypt(iv, key, data);\n    }\n    else {\n        result = helpers_1.fallbackAesEncrypt(iv, key, data);\n    }\n    return result;\n}\nexports.aesCbcEncryptSync = aesCbcEncryptSync;\nfunction aesCbcDecryptSync(iv, key, data) {\n    let result;\n    if (helpers_1.isNode()) {\n        result = helpers_1.nodeAesDecrypt(iv, key, data);\n    }\n    else {\n        result = helpers_1.fallbackAesDecrypt(iv, key, data);\n    }\n    return result;\n}\nexports.aesCbcDecryptSync = aesCbcDecryptSync;\n//# sourceMappingURL=sync.js.map"]},"metadata":{},"sourceType":"script"}