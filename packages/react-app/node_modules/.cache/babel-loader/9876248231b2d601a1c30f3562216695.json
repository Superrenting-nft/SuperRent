{"ast":null,"code":"'use strict';\n\nvar assert = require('minimalistic-assert');\n\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n  }\n\n  return res;\n}\n\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.shr64_lo = shr64_lo;","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/@ethersproject/sha2/node_modules/hash.js/lib/hash/utils.js"],"names":["assert","require","inherits","exports","toArray","msg","enc","Array","isArray","slice","res","i","length","c","charCodeAt","hi","lo","push","replace","parseInt","toHex","zero2","toString","htonl","w","toHex32","endian","zero8","word","join32","start","end","len","k","split32","m","rotr32","b","rotl32","sum32","a","sum32_3","sum32_4","d","sum32_5","e","sum64","buf","pos","ah","al","bh","bl","sum64_hi","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","r","rotr64_lo","shr64_hi","shr64_lo"],"mappings":"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","sourcesContent":["'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n"]},"metadata":{},"sourceType":"script"}