{"ast":null,"code":"\"use strict\";\n\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  return function (method, params) {\n    // Metamask complains about eth_sign (and on some versions hangs)\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      sendFunc(request, function (error, result) {\n        if (error) {\n          return reject(error);\n        }\n\n        if (result.error) {\n          const error = new Error(result.error.message);\n          error.code = result.error.code;\n          error.data = result.error.data;\n          return reject(error);\n        }\n\n        resolve(result.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    } // Metamask complains about eth_sign (and on some versions hangs)\n\n\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    return provider.request({\n      method,\n      params\n    });\n  };\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    logger.checkNew(new.target, Web3Provider);\n\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n\n}","map":{"version":3,"sources":["../src.ts/web3-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    return function (method, params) {\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            sendFunc(request, function (error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                if (result.error) {\n                    const error = new Error(result.error.message);\n                    error.code = result.error.code;\n                    error.data = result.error.data;\n                    return reject(error);\n                }\n                resolve(result.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = \"personal_sign\";\n            params = [params[1], params[0]];\n        }\n        return provider.request({ method, params });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map"]},"metadata":{},"sourceType":"module"}