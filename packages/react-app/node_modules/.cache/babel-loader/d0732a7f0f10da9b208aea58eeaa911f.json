{"ast":null,"code":"function hex2rgba(hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString();\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string');\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('');\n\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex);\n  } // Convert from short to long form (fff -> ffffff)\n\n\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c];\n    }));\n  } // Add default alpha value\n\n\n  if (hexCode.length === 6) hexCode.push('F', 'F');\n  var hexValue = parseInt(hexCode.join(''), 16);\n  return {\n    r: hexValue >> 24 & 255,\n    g: hexValue >> 16 & 255,\n    b: hexValue >> 8 & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  };\n}\n\nexports.getOptions = function getOptions(options) {\n  if (!options) options = {};\n  if (!options.color) options.color = {};\n  var margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;\n  var width = options.width && options.width >= 21 ? options.width : undefined;\n  var scale = options.scale || 4;\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  };\n};\n\nexports.getScale = function getScale(qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;\n};\n\nexports.getImageWidth = function getImageWidth(qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts);\n  return Math.floor((qrSize + opts.margin * 2) * scale);\n};\n\nexports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n  var size = qr.modules.size;\n  var data = qr.modules.data;\n  var scale = exports.getScale(size, opts);\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale);\n  var scaledMargin = opts.margin * scale;\n  var palette = [opts.color.light, opts.color.dark];\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4;\n      var pxColor = opts.color.light;\n\n      if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale);\n        var jSrc = Math.floor((j - scaledMargin) / scale);\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n      }\n\n      imgData[posDst++] = pxColor.r;\n      imgData[posDst++] = pxColor.g;\n      imgData[posDst++] = pxColor.b;\n      imgData[posDst] = pxColor.a;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/qrcode/lib/renderer/utils.js"],"names":["hex2rgba","hex","toString","Error","hexCode","slice","replace","split","length","Array","prototype","concat","apply","map","c","push","hexValue","parseInt","join","r","g","b","a","exports","getOptions","options","color","margin","width","undefined","scale","dark","light","type","rendererOpts","getScale","qrSize","opts","getImageWidth","Math","floor","qrToImageData","imgData","qr","size","modules","data","symbolSize","scaledMargin","palette","i","j","posDst","pxColor","iSrc","jSrc"],"mappings":"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","sourcesContent":["function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}