{"ast":null,"code":"exports.L = {\n  bit: 1\n};\nexports.M = {\n  bit: 0\n};\nexports.Q = {\n  bit: 3\n};\nexports.H = {\n  bit: 2\n};\n\nfunction fromString(string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string');\n  }\n\n  var lcStr = string.toLowerCase();\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L;\n\n    case 'm':\n    case 'medium':\n      return exports.M;\n\n    case 'q':\n    case 'quartile':\n      return exports.Q;\n\n    case 'h':\n    case 'high':\n      return exports.H;\n\n    default:\n      throw new Error('Unknown EC Level: ' + string);\n  }\n}\n\nexports.isValid = function isValid(level) {\n  return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;\n};\n\nexports.from = function from(value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value;\n  }\n\n  try {\n    return fromString(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/qrcode/lib/core/error-correction-level.js"],"names":["exports","L","bit","M","Q","H","fromString","string","Error","lcStr","toLowerCase","isValid","level","from","value","defaultValue","e"],"mappings":"AAAAA,OAAO,CAACC,CAAR,GAAY;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAZ;AACAF,OAAO,CAACG,CAAR,GAAY;AAAED,EAAAA,GAAG,EAAE;AAAP,CAAZ;AACAF,OAAO,CAACI,CAAR,GAAY;AAAEF,EAAAA,GAAG,EAAE;AAAP,CAAZ;AACAF,OAAO,CAACK,CAAR,GAAY;AAAEH,EAAAA,GAAG,EAAE;AAAP,CAAZ;;AAEA,SAASI,UAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,UAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,MAAIC,KAAK,GAAGF,MAAM,CAACG,WAAP,EAAZ;;AAEA,UAAQD,KAAR;AACE,SAAK,GAAL;AACA,SAAK,KAAL;AACE,aAAOT,OAAO,CAACC,CAAf;;AAEF,SAAK,GAAL;AACA,SAAK,QAAL;AACE,aAAOD,OAAO,CAACG,CAAf;;AAEF,SAAK,GAAL;AACA,SAAK,UAAL;AACE,aAAOH,OAAO,CAACI,CAAf;;AAEF,SAAK,GAAL;AACA,SAAK,MAAL;AACE,aAAOJ,OAAO,CAACK,CAAf;;AAEF;AACE,YAAM,IAAIG,KAAJ,CAAU,uBAAuBD,MAAjC,CAAN;AAlBJ;AAoBD;;AAEDP,OAAO,CAACW,OAAR,GAAkB,SAASA,OAAT,CAAkBC,KAAlB,EAAyB;AACzC,SAAOA,KAAK,IAAI,OAAOA,KAAK,CAACV,GAAb,KAAqB,WAA9B,IACLU,KAAK,CAACV,GAAN,IAAa,CADR,IACaU,KAAK,CAACV,GAAN,GAAY,CADhC;AAED,CAHD;;AAKAF,OAAO,CAACa,IAAR,GAAe,SAASA,IAAT,CAAeC,KAAf,EAAsBC,YAAtB,EAAoC;AACjD,MAAIf,OAAO,CAACW,OAAR,CAAgBG,KAAhB,CAAJ,EAA4B;AAC1B,WAAOA,KAAP;AACD;;AAED,MAAI;AACF,WAAOR,UAAU,CAACQ,KAAD,CAAjB;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACV,WAAOD,YAAP;AACD;AACF,CAVD","sourcesContent":["exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n"]},"metadata":{},"sourceType":"script"}