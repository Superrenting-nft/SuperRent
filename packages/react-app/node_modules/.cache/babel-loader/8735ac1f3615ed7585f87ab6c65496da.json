{"ast":null,"code":"var _jsxFileName = \"/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/Contract/utils.js\";\nimport React from \"react\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Address } from \"../../components\";\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + formatUnits(thing, \"ether\");\n    }\n  }\n\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") == 0 && thing.length == 42) {\n    return /*#__PURE__*/React.createElement(Address, {\n      address: thing,\n      fontSize: 22,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/Contract/utils.js"],"names":["React","formatUnits","isAddress","Address","tryToDisplay","thing","toNumber","e","indexOf","length","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAIA,KAAK,IAAIA,KAAK,CAACC,QAAnB,EAA6B;AAC3B,QAAI;AACF,aAAOD,KAAK,CAACC,QAAN,EAAP;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,aAAO,MAAIN,WAAW,CAACI,KAAD,EAAQ,OAAR,CAAtB;AACD;AACF;;AACD,MAAGA,KAAK,IAAIA,KAAK,CAACG,OAAf,IAA0BH,KAAK,CAACG,OAAN,CAAc,IAAd,KAAqB,CAA/C,IAAoDH,KAAK,CAACI,MAAN,IAAgB,EAAvE,EAA0E;AACxE,wBACE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAEJ,KADX;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AACD,SAAOK,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAP;AACD,CAjBD;;AAmBA,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Address } from \"../../components\";\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\"+formatUnits(thing, \"ether\");\n    }\n  }\n  if(thing && thing.indexOf && thing.indexOf(\"0x\")==0 && thing.length == 42){\n    return (\n      <Address\n        address={thing}\n        fontSize={22}\n      />\n    )\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n"]},"metadata":{},"sourceType":"module"}