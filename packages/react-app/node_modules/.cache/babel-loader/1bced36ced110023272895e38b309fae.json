{"ast":null,"code":"module.exports = {\n  minBlockRef,\n  maxBlockRef,\n  sortBlockRefs,\n  bnToHex,\n  blockRefIsNumber,\n  hexToInt,\n  incrementHexInt,\n  intToHex,\n  unsafeRandomBytes\n};\n\nfunction minBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs);\n  return sortedRefs[0];\n}\n\nfunction maxBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs);\n  return sortedRefs[sortedRefs.length - 1];\n}\n\nfunction sortBlockRefs(refs) {\n  return refs.sort((refA, refB) => {\n    if (refA === 'latest' || refB === 'earliest') return 1;\n    if (refB === 'latest' || refA === 'earliest') return -1;\n    return hexToInt(refA) - hexToInt(refB);\n  });\n}\n\nfunction bnToHex(bn) {\n  return '0x' + bn.toString(16);\n}\n\nfunction blockRefIsNumber(blockRef) {\n  return blockRef && !['earliest', 'latest', 'pending'].includes(blockRef);\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  return Number.parseInt(hexString, 16);\n}\n\nfunction incrementHexInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  const value = hexToInt(hexString);\n  return intToHex(value + 1);\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int;\n  let hexString = int.toString(16);\n  const needsLeftPad = hexString.length % 2;\n  if (needsLeftPad) hexString = '0' + hexString;\n  return '0x' + hexString;\n}\n\nfunction unsafeRandomBytes(byteCount) {\n  let result = '0x';\n\n  for (let i = 0; i < byteCount; i++) {\n    result += unsafeRandomNibble();\n    result += unsafeRandomNibble();\n  }\n\n  return result;\n}\n\nfunction unsafeRandomNibble() {\n  return Math.floor(Math.random() * 16).toString(16);\n}","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/eth-json-rpc-filters/hexUtils.js"],"names":["module","exports","minBlockRef","maxBlockRef","sortBlockRefs","bnToHex","blockRefIsNumber","hexToInt","incrementHexInt","intToHex","unsafeRandomBytes","refs","sortedRefs","length","sort","refA","refB","bn","toString","blockRef","includes","hexString","undefined","Number","parseInt","value","int","needsLeftPad","byteCount","result","i","unsafeRandomNibble","Math","floor","random"],"mappings":"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","sourcesContent":["\nmodule.exports = {\n  minBlockRef,\n  maxBlockRef,\n  sortBlockRefs,\n  bnToHex,\n  blockRefIsNumber,\n  hexToInt,\n  incrementHexInt,\n  intToHex,\n  unsafeRandomBytes,\n}\n\nfunction minBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[0]\n}\n\nfunction maxBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[sortedRefs.length-1]\n}\n\nfunction sortBlockRefs(refs) {\n  return refs.sort((refA, refB) => {\n    if (refA === 'latest' || refB === 'earliest') return 1\n    if (refB === 'latest' || refA === 'earliest') return -1\n    return hexToInt(refA) - hexToInt(refB)\n  })\n}\n\nfunction bnToHex(bn) {\n  return '0x' + bn.toString(16)\n}\n\nfunction blockRefIsNumber(blockRef){\n  return blockRef && !['earliest', 'latest', 'pending'].includes(blockRef)\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  let hexString = int.toString(16)\n  const needsLeftPad = hexString.length % 2\n  if (needsLeftPad) hexString = '0' + hexString\n  return '0x' + hexString\n}\n\nfunction unsafeRandomBytes(byteCount) {\n  let result = '0x'\n  for (let i = 0; i < byteCount; i++) {\n    result += unsafeRandomNibble()\n    result += unsafeRandomNibble()\n  }\n  return result\n}\n\nfunction unsafeRandomNibble() {\n  return Math.floor(Math.random() * 16).toString(16)\n}\n"]},"metadata":{},"sourceType":"script"}