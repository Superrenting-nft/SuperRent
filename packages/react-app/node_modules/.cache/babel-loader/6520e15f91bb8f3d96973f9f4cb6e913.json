{"ast":null,"code":"const createPayload = require('./create-payload.js');\n\nmodule.exports = estimateGas;\n/*\n\nThis is a work around for https://github.com/ethereum/go-ethereum/issues/2577\n\n*/\n\nfunction estimateGas(provider, txParams, cb) {\n  provider.sendAsync(createPayload({\n    method: 'eth_estimateGas',\n    params: [txParams]\n  }), function (err, res) {\n    if (err) {\n      // handle simple value transfer case\n      if (err.message === 'no contract code at given address') {\n        return cb(null, '0xcf08');\n      } else {\n        return cb(err);\n      }\n    }\n\n    cb(null, res.result);\n  });\n}","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/web3-provider-engine/util/estimate-gas.js"],"names":["createPayload","require","module","exports","estimateGas","provider","txParams","cb","sendAsync","method","params","err","res","message","result"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,qBAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,WAAjB;AAEA;AACA;AACA;AACA;AACA;;AAGA,SAASA,WAAT,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,EAAzC,EAA6C;AAC3CF,EAAAA,QAAQ,CAACG,SAAT,CAAmBR,aAAa,CAAC;AAC/BS,IAAAA,MAAM,EAAE,iBADuB;AAE/BC,IAAAA,MAAM,EAAE,CAACJ,QAAD;AAFuB,GAAD,CAAhC,EAGI,UAASK,GAAT,EAAcC,GAAd,EAAkB;AACpB,QAAID,GAAJ,EAAS;AACP;AACA,UAAIA,GAAG,CAACE,OAAJ,KAAgB,mCAApB,EAAyD;AACvD,eAAON,EAAE,CAAC,IAAD,EAAO,QAAP,CAAT;AACD,OAFD,MAEO;AACL,eAAOA,EAAE,CAACI,GAAD,CAAT;AACD;AACF;;AACDJ,IAAAA,EAAE,CAAC,IAAD,EAAOK,GAAG,CAACE,MAAX,CAAF;AACD,GAbD;AAcD","sourcesContent":["const createPayload = require('./create-payload.js')\n\nmodule.exports = estimateGas\n\n/*\n\nThis is a work around for https://github.com/ethereum/go-ethereum/issues/2577\n\n*/\n\n\nfunction estimateGas(provider, txParams, cb) {\n  provider.sendAsync(createPayload({\n    method: 'eth_estimateGas',\n    params: [txParams]\n  }), function(err, res){\n    if (err) {\n      // handle simple value transfer case\n      if (err.message === 'no contract code at given address') {\n        return cb(null, '0xcf08')\n      } else {\n        return cb(err)        \n      }\n    }\n    cb(null, res.result)\n  })\n}"]},"metadata":{},"sourceType":"script"}