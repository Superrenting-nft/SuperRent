{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmacSha512Verify = exports.hmacSha512Sign = exports.hmacSha256Verify = exports.hmacSha256Sign = void 0;\n\nconst helpers_1 = require(\"../helpers\");\n\nfunction hmacSha256Sign(key, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (helpers_1.isBrowser()) {\n      result = yield helpers_1.browserHmacSha256Sign(key, msg);\n    } else if (helpers_1.isNode()) {\n      result = helpers_1.nodeHmacSha256Sign(key, msg);\n    } else {\n      result = helpers_1.fallbackHmacSha256Sign(key, msg);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha256Sign = hmacSha256Sign;\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (helpers_1.isBrowser()) {\n      const expectedSig = yield helpers_1.browserHmacSha256Sign(key, msg);\n      result = helpers_1.isConstantTime(expectedSig, sig);\n    } else if (helpers_1.isNode()) {\n      const expectedSig = helpers_1.nodeHmacSha256Sign(key, msg);\n      result = helpers_1.isConstantTime(expectedSig, sig);\n    } else {\n      const expectedSig = helpers_1.fallbackHmacSha256Sign(key, msg);\n      result = helpers_1.isConstantTime(expectedSig, sig);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha256Verify = hmacSha256Verify;\n\nfunction hmacSha512Sign(key, msg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (helpers_1.isBrowser()) {\n      result = yield helpers_1.browserHmacSha512Sign(key, msg);\n    } else if (helpers_1.isNode()) {\n      result = helpers_1.nodeHmacSha512Sign(key, msg);\n    } else {\n      result = helpers_1.fallbackHmacSha512Sign(key, msg);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha512Sign = hmacSha512Sign;\n\nfunction hmacSha512Verify(key, msg, sig) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let result;\n\n    if (helpers_1.isNode()) {\n      const expectedSig = helpers_1.nodeHmacSha512Sign(key, msg);\n      result = helpers_1.isConstantTime(expectedSig, sig);\n    } else {\n      const expectedSig = helpers_1.fallbackHmacSha512Sign(key, msg);\n      result = helpers_1.isConstantTime(expectedSig, sig);\n    }\n\n    return result;\n  });\n}\n\nexports.hmacSha512Verify = hmacSha512Verify;","map":{"version":3,"sources":["../../../src/hmac/async.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAYA,SAAsB,cAAtB,CACE,GADF,EAEE,GAFF,EAEiB;;AAEf,QAAI,MAAJ;;AACA,QAAI,SAAA,CAAA,SAAA,EAAJ,EAAiB;AACf,MAAA,MAAM,GAAG,MAAM,SAAA,CAAA,qBAAA,CAAsB,GAAtB,EAA2B,GAA3B,CAAf;AACD,KAFD,MAEO,IAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACnB,MAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAAT;AACD,KAFM,MAEA;AACL,MAAA,MAAM,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAAT;AACD;;AACD,WAAO,MAAP;AACD,G;AAAA;;AAbD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAeA,SAAsB,gBAAtB,CACE,GADF,EAEE,GAFF,EAGE,GAHF,EAGiB;;AAEf,QAAI,MAAJ;;AACA,QAAI,SAAA,CAAA,SAAA,EAAJ,EAAiB;AACf,YAAM,WAAW,GAAG,MAAM,SAAA,CAAA,qBAAA,CAAsB,GAAtB,EAA2B,GAA3B,CAA1B;AACA,MAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD,KAHD,MAGO,IAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACnB,YAAM,WAAW,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAApB;AACA,MAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD,KAHM,MAGA;AACL,YAAM,WAAW,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAApB;AACA,MAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD;;AACD,WAAO,MAAP;AACD,G;AAAA;;AAjBD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAmBA,SAAsB,cAAtB,CACE,GADF,EAEE,GAFF,EAEiB;;AAEf,QAAI,MAAJ;;AACA,QAAI,SAAA,CAAA,SAAA,EAAJ,EAAiB;AACf,MAAA,MAAM,GAAG,MAAM,SAAA,CAAA,qBAAA,CAAsB,GAAtB,EAA2B,GAA3B,CAAf;AACD,KAFD,MAEO,IAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACnB,MAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAAT;AACD,KAFM,MAEA;AACL,MAAA,MAAM,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAAT;AACD;;AACD,WAAO,MAAP;AACD,G;AAAA;;AAbD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAeA,SAAsB,gBAAtB,CACE,GADF,EAEE,GAFF,EAGE,GAHF,EAGiB;;AAEf,QAAI,MAAJ;;AACA,QAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,YAAM,WAAW,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAApB;AACA,MAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD,KAHD,MAGO;AACL,YAAM,WAAW,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAApB;AACA,MAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD;;AACD,WAAO,MAAP;AACD,G;AAAA;;AAdD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmacSha512Verify = exports.hmacSha512Sign = exports.hmacSha256Verify = exports.hmacSha256Sign = void 0;\nconst helpers_1 = require(\"../helpers\");\nfunction hmacSha256Sign(key, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let result;\n        if (helpers_1.isBrowser()) {\n            result = yield helpers_1.browserHmacSha256Sign(key, msg);\n        }\n        else if (helpers_1.isNode()) {\n            result = helpers_1.nodeHmacSha256Sign(key, msg);\n        }\n        else {\n            result = helpers_1.fallbackHmacSha256Sign(key, msg);\n        }\n        return result;\n    });\n}\nexports.hmacSha256Sign = hmacSha256Sign;\nfunction hmacSha256Verify(key, msg, sig) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let result;\n        if (helpers_1.isBrowser()) {\n            const expectedSig = yield helpers_1.browserHmacSha256Sign(key, msg);\n            result = helpers_1.isConstantTime(expectedSig, sig);\n        }\n        else if (helpers_1.isNode()) {\n            const expectedSig = helpers_1.nodeHmacSha256Sign(key, msg);\n            result = helpers_1.isConstantTime(expectedSig, sig);\n        }\n        else {\n            const expectedSig = helpers_1.fallbackHmacSha256Sign(key, msg);\n            result = helpers_1.isConstantTime(expectedSig, sig);\n        }\n        return result;\n    });\n}\nexports.hmacSha256Verify = hmacSha256Verify;\nfunction hmacSha512Sign(key, msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let result;\n        if (helpers_1.isBrowser()) {\n            result = yield helpers_1.browserHmacSha512Sign(key, msg);\n        }\n        else if (helpers_1.isNode()) {\n            result = helpers_1.nodeHmacSha512Sign(key, msg);\n        }\n        else {\n            result = helpers_1.fallbackHmacSha512Sign(key, msg);\n        }\n        return result;\n    });\n}\nexports.hmacSha512Sign = hmacSha512Sign;\nfunction hmacSha512Verify(key, msg, sig) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let result;\n        if (helpers_1.isNode()) {\n            const expectedSig = helpers_1.nodeHmacSha512Sign(key, msg);\n            result = helpers_1.isConstantTime(expectedSig, sig);\n        }\n        else {\n            const expectedSig = helpers_1.fallbackHmacSha512Sign(key, msg);\n            result = helpers_1.isConstantTime(expectedSig, sig);\n        }\n        return result;\n    });\n}\nexports.hmacSha512Verify = hmacSha512Verify;\n//# sourceMappingURL=async.js.map"]},"metadata":{},"sourceType":"script"}