{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  return data.encseed && data.ethaddr;\n}\nexport function isKeystoreWallet(json) {\n  let data = null;\n\n  try {\n    data = JSON.parse(json);\n  } catch (error) {\n    return false;\n  }\n\n  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n    return false;\n  } // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n\n\n  return true;\n} //export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json) {\n  if (isCrowdsaleWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).ethaddr);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  if (isKeystoreWallet(json)) {\n    try {\n      return getAddress(JSON.parse(json).address);\n    } catch (error) {\n      return null;\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["../src.ts/inspect.ts"],"names":[],"mappings":"AAAA;;AAEA,SAAS,UAAT,QAA2B,wBAA3B;AAGA,OAAM,SAAU,iBAAV,CAA4B,IAA5B,EAAwC;AAC1C,MAAI,IAAI,GAAQ,IAAhB;;AACA,MAAI;AACA,IAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAP;AACH,GAFD,CAEE,OAAO,KAAP,EAAc;AAAE,WAAO,KAAP;AAAe;;AAEjC,SAAQ,IAAI,CAAC,OAAL,IAAgB,IAAI,CAAC,OAA7B;AACH;AAED,OAAM,SAAU,gBAAV,CAA2B,IAA3B,EAAuC;AACzC,MAAI,IAAI,GAAQ,IAAhB;;AACA,MAAI;AACA,IAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAP;AACH,GAFD,CAEE,OAAO,KAAP,EAAc;AAAE,WAAO,KAAP;AAAe;;AAEjC,MAAI,CAAC,IAAI,CAAC,OAAN,IAAiB,QAAQ,CAAC,IAAI,CAAC,OAAN,CAAR,KAA2B,IAAI,CAAC,OAAjD,IAA4D,QAAQ,CAAC,IAAI,CAAC,OAAN,CAAR,KAA2B,CAA3F,EAA8F;AAC1F,WAAO,KAAP;AACH,GARwC,CAUzC;;;AACA,SAAO,IAAP;AACH,C,CAED;AACA;AACA;;AAEA,OAAM,SAAU,oBAAV,CAA+B,IAA/B,EAA2C;AAC7C,MAAI,iBAAiB,CAAC,IAAD,CAArB,EAA6B;AACzB,QAAI;AACA,aAAO,UAAU,CAAC,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB,OAAlB,CAAjB;AACH,KAFD,CAEE,OAAO,KAAP,EAAc;AAAE,aAAO,IAAP;AAAc;AACnC;;AAED,MAAI,gBAAgB,CAAC,IAAD,CAApB,EAA4B;AACxB,QAAI;AACA,aAAO,UAAU,CAAC,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB,OAAlB,CAAjB;AACH,KAFD,CAEE,OAAO,KAAP,EAAc;AAAE,aAAO,IAAP;AAAc;AACnC;;AAED,SAAO,IAAP;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map"]},"metadata":{},"sourceType":"module"}