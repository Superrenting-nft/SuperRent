{"ast":null,"code":"import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\nexport default function useGasPrice(targetNetwork, speed) {\n  const [gasPrice, setGasPrice] = useState();\n\n  const loadGasPrice = async () => {\n    if (targetNetwork.gasPrice) {\n      setGasPrice(targetNetwork.gasPrice);\n    } else {\n      axios.get(\"https://ethgasstation.info/json/ethgasAPI.json\").then(response => {\n        const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n\n        if (newGasPrice !== gasPrice) {\n          setGasPrice(newGasPrice);\n        }\n      }).catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/packages/react-app/src/hooks/GasPrice.js"],"names":["useState","usePoller","axios","useGasPrice","targetNetwork","speed","gasPrice","setGasPrice","loadGasPrice","get","then","response","newGasPrice","data","catch","error","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqBC,aAArB,EAAmCC,KAAnC,EAA0C;AACvD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;;AACA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,QAAGJ,aAAa,CAACE,QAAjB,EAA0B;AACxBC,MAAAA,WAAW,CAACH,aAAa,CAACE,QAAf,CAAX;AACD,KAFD,MAEK;AACHJ,MAAAA,KAAK,CACFO,GADH,CACO,gDADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,cAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcR,KAAK,IAAI,MAAvB,IAAiC,SAArD;;AACA,YAAIO,WAAW,KAAKN,QAApB,EAA8B;AAC5BC,UAAAA,WAAW,CAACK,WAAD,CAAX;AACD;AACF,OAPH,EAQGE,KARH,CAQSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARlB;AASD;AACF,GAdD;;AAgBAd,EAAAA,SAAS,CAACO,YAAD,EAAe,KAAf,CAAT;AACA,SAAOF,QAAP;AACD","sourcesContent":["import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\n\nexport default function useGasPrice(targetNetwork,speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if(targetNetwork.gasPrice){\n      setGasPrice(targetNetwork.gasPrice);\n    }else{\n      axios\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n        .then(response => {\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n"]},"metadata":{},"sourceType":"module"}