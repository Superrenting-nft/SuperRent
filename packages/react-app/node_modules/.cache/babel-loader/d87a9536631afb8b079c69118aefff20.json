{"ast":null,"code":"var _jsxFileName = \"/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/TokenBalance.jsx\";\nimport React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useTokenBalance } from \"eth-hooks\";\nexport default function TokenBalance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n  const tokenContract = props.contracts && props.contracts[props.name];\n  const balance = useTokenBalance(tokenContract, props.address, 1777);\n  let floatBalance = parseFloat(\"0.00\");\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n\n  if (usingBalance) {\n    const etherBalance = formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  if (props.dollarMultiplier && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * props.dollarMultiplier).toFixed(2);\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      verticalAlign: \"middle\",\n      fontSize: 24,\n      padding: 8,\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setDollarMode(!dollarMode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, props.img, \" \", displayBalance);\n}","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/packages/react-app/src/components/TokenBalance.jsx"],"names":["React","useState","formatEther","useTokenBalance","TokenBalance","props","dollarMode","setDollarMode","tokenContract","contracts","name","balance","address","floatBalance","parseFloat","usingBalance","etherBalance","toFixed","displayBalance","dollarMultiplier","verticalAlign","fontSize","padding","cursor","img"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMO,aAAa,GAAGH,KAAK,CAACI,SAAN,IAAmBJ,KAAK,CAACI,SAAN,CAAgBJ,KAAK,CAACK,IAAtB,CAAzC;AACA,QAAMC,OAAO,GAAGR,eAAe,CAACK,aAAD,EAAgBH,KAAK,CAACO,OAAtB,EAA+B,IAA/B,CAA/B;AAEA,MAAIC,YAAY,GAAGC,UAAU,CAAC,MAAD,CAA7B;AAEA,MAAIC,YAAY,GAAGJ,OAAnB;;AAEA,MAAI,OAAON,KAAK,CAACM,OAAb,KAAyB,WAA7B,EAA0C;AACxCI,IAAAA,YAAY,GAAGV,KAAK,CAACM,OAArB;AACD;;AAED,MAAII,YAAJ,EAAkB;AAChB,UAAMC,YAAY,GAAGd,WAAW,CAACa,YAAD,CAAhC;AACAD,IAAAA,UAAU,CAACE,YAAD,CAAV,CAAyBC,OAAzB,CAAiC,CAAjC;AACAJ,IAAAA,YAAY,GAAGC,UAAU,CAACE,YAAD,CAAzB;AACD;;AAED,MAAIE,cAAc,GAAGL,YAAY,CAACI,OAAb,CAAqB,CAArB,CAArB;;AAEA,MAAIZ,KAAK,CAACc,gBAAN,IAA0Bb,UAA9B,EAA0C;AACxCY,IAAAA,cAAc,GAAG,MAAM,CAACL,YAAY,GAAGR,KAAK,CAACc,gBAAtB,EAAwCF,OAAxC,CAAgD,CAAhD,CAAvB;AACD;;AAED,sBACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,aAAa,EAAE,QADV;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,OAAO,EAAE,CAHJ;AAILC,MAAAA,MAAM,EAAE;AAJH,KADT;AAOE,IAAA,OAAO,EAAE,MAAM;AACbhB,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGD,KAAK,CAACmB,GAXT,OAWeN,cAXf,CADF;AAeD","sourcesContent":["import React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useTokenBalance } from \"eth-hooks\";\n\nexport default function TokenBalance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  const tokenContract = props.contracts && props.contracts[props.name];\n  const balance = useTokenBalance(tokenContract, props.address, 1777);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n\n  if (usingBalance) {\n    const etherBalance = formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  if (props.dollarMultiplier && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * props.dollarMultiplier).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {props.img} {displayBalance}\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}