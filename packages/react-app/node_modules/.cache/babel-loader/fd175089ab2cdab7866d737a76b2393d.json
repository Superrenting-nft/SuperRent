{"ast":null,"code":"var ECLevel = require('./error-correction-level');\n\nvar EC_BLOCKS_TABLE = [// L  M  Q  H\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];\nvar EC_CODEWORDS_TABLE = [// L  M  Q  H\n7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\n\nexports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n\n    case ECLevel.M:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n\n    case ECLevel.Q:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n\n    case ECLevel.H:\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\n\n\nexports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {\n  switch (errorCorrectionLevel) {\n    case ECLevel.L:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n\n    case ECLevel.M:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n\n    case ECLevel.Q:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n\n    case ECLevel.H:\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n\n    default:\n      return undefined;\n  }\n};","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/qrcode/lib/core/error-correction-code.js"],"names":["ECLevel","require","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","exports","getBlocksCount","version","errorCorrectionLevel","L","M","Q","H","undefined","getTotalCodewordsCount"],"mappings":"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","sourcesContent":["var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}