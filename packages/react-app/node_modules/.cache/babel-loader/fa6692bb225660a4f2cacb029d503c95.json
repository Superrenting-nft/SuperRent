{"ast":null,"code":"var Mode = require('./mode');\n\nvar Utils = require('./utils');\n\nfunction KanjiData(data) {\n  this.mode = Mode.KANJI;\n  this.data = data;\n}\n\nKanjiData.getBitsLength = function getBitsLength(length) {\n  return length * 13;\n};\n\nKanjiData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n  return KanjiData.getBitsLength(this.data.length);\n};\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i; // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i]); // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140; // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140;\n    } else {\n      throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' + 'Make sure your charset is UTF-8');\n    } // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n\n\n    value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff); // Convert result to a 13-bit binary string\n\n    bitBuffer.put(value, 13);\n  }\n};\n\nmodule.exports = KanjiData;","map":{"version":3,"sources":["/Users/Antonio/Desktop/SuperRent/node_modules/qrcode/lib/core/kanji-data.js"],"names":["Mode","require","Utils","KanjiData","data","mode","KANJI","getBitsLength","length","prototype","getLength","write","bitBuffer","i","value","toSJIS","Error","put","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AAEA,SAASE,SAAT,CAAoBC,IAApB,EAA0B;AACxB,OAAKC,IAAL,GAAYL,IAAI,CAACM,KAAjB;AACA,OAAKF,IAAL,GAAYA,IAAZ;AACD;;AAEDD,SAAS,CAACI,aAAV,GAA0B,SAASA,aAAT,CAAwBC,MAAxB,EAAgC;AACxD,SAAOA,MAAM,GAAG,EAAhB;AACD,CAFD;;AAIAL,SAAS,CAACM,SAAV,CAAoBC,SAApB,GAAgC,SAASA,SAAT,GAAsB;AACpD,SAAO,KAAKN,IAAL,CAAUI,MAAjB;AACD,CAFD;;AAIAL,SAAS,CAACM,SAAV,CAAoBF,aAApB,GAAoC,SAASA,aAAT,GAA0B;AAC5D,SAAOJ,SAAS,CAACI,aAAV,CAAwB,KAAKH,IAAL,CAAUI,MAAlC,CAAP;AACD,CAFD;;AAIAL,SAAS,CAACM,SAAV,CAAoBE,KAApB,GAA4B,UAAUC,SAAV,EAAqB;AAC/C,MAAIC,CAAJ,CAD+C,CAG/C;AACA;AACA;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKT,IAAL,CAAUI,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,QAAIC,KAAK,GAAGZ,KAAK,CAACa,MAAN,CAAa,KAAKX,IAAL,CAAUS,CAAV,CAAb,CAAZ,CADqC,CAGrC;;AACA,QAAIC,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAAhC,EAAwC;AACtC;AACAA,MAAAA,KAAK,IAAI,MAAT,CAFsC,CAIxC;AACC,KALD,MAKO,IAAIA,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAAhC,EAAwC;AAC7C;AACAA,MAAAA,KAAK,IAAI,MAAT;AACD,KAHM,MAGA;AACL,YAAM,IAAIE,KAAJ,CACJ,6BAA6B,KAAKZ,IAAL,CAAUS,CAAV,CAA7B,GAA4C,IAA5C,GACA,iCAFI,CAAN;AAGD,KAhBoC,CAkBrC;AACA;;;AACAC,IAAAA,KAAK,GAAI,CAAEA,KAAK,KAAK,CAAX,GAAgB,IAAjB,IAAyB,IAA1B,IAAmCA,KAAK,GAAG,IAA3C,CAAR,CApBqC,CAsBrC;;AACAF,IAAAA,SAAS,CAACK,GAAV,CAAcH,KAAd,EAAqB,EAArB;AACD;AACF,CA/BD;;AAiCAI,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n"]},"metadata":{},"sourceType":"script"}