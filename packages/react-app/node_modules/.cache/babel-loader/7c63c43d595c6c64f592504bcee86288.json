{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmacSha512VerifySync = exports.hmacSha512SignSync = exports.hmacSha256VerifySync = exports.hmacSha256SignSync = void 0;\n\nconst helpers_1 = require(\"../helpers\");\n\nfunction hmacSha256SignSync(key, msg) {\n  let result;\n\n  if (helpers_1.isNode()) {\n    result = helpers_1.nodeHmacSha256Sign(key, msg);\n  } else {\n    result = helpers_1.fallbackHmacSha256Sign(key, msg);\n  }\n\n  return result;\n}\n\nexports.hmacSha256SignSync = hmacSha256SignSync;\n\nfunction hmacSha256VerifySync(key, msg, sig) {\n  let result;\n\n  if (helpers_1.isNode()) {\n    const expectedSig = helpers_1.nodeHmacSha256Sign(key, msg);\n    result = helpers_1.isConstantTime(expectedSig, sig);\n  } else {\n    const expectedSig = helpers_1.fallbackHmacSha256Sign(key, msg);\n    result = helpers_1.isConstantTime(expectedSig, sig);\n  }\n\n  return result;\n}\n\nexports.hmacSha256VerifySync = hmacSha256VerifySync;\n\nfunction hmacSha512SignSync(key, msg) {\n  let result;\n\n  if (helpers_1.isNode()) {\n    result = helpers_1.nodeHmacSha512Sign(key, msg);\n  } else {\n    result = helpers_1.fallbackHmacSha512Sign(key, msg);\n  }\n\n  return result;\n}\n\nexports.hmacSha512SignSync = hmacSha512SignSync;\n\nfunction hmacSha512VerifySync(key, msg, sig) {\n  let result;\n\n  if (helpers_1.isNode()) {\n    const expectedSig = helpers_1.nodeHmacSha512Sign(key, msg);\n    result = helpers_1.isConstantTime(expectedSig, sig);\n  } else {\n    const expectedSig = helpers_1.fallbackHmacSha512Sign(key, msg);\n    result = helpers_1.isConstantTime(expectedSig, sig);\n  }\n\n  return result;\n}\n\nexports.hmacSha512VerifySync = hmacSha512VerifySync;","map":{"version":3,"sources":["../../../src/hmac/sync.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AASA,SAAgB,kBAAhB,CACE,GADF,EAEE,GAFF,EAEiB;AAEf,MAAI,MAAJ;;AACA,MAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,IAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAAT;AACD,GAFD,MAEO;AACL,IAAA,MAAM,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAXD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAaA,SAAgB,oBAAhB,CACE,GADF,EAEE,GAFF,EAGE,GAHF,EAGiB;AAEf,MAAI,MAAJ;;AACA,MAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,UAAM,WAAW,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAApB;AACA,IAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD,GAHD,MAGO;AACL,UAAM,WAAW,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAApB;AACA,IAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAdD,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAgBA,SAAgB,kBAAhB,CACE,GADF,EAEE,GAFF,EAEiB;AAEf,MAAI,MAAJ;;AACA,MAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,IAAA,MAAM,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAAT;AACD,GAFD,MAEO;AACL,IAAA,MAAM,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAXD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAaA,SAAgB,oBAAhB,CACE,GADF,EAEE,GAFF,EAGE,GAHF,EAGiB;AAEf,MAAI,MAAJ;;AACA,MAAI,SAAA,CAAA,MAAA,EAAJ,EAAc;AACZ,UAAM,WAAW,GAAG,SAAA,CAAA,kBAAA,CAAmB,GAAnB,EAAwB,GAAxB,CAApB;AACA,IAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD,GAHD,MAGO;AACL,UAAM,WAAW,GAAG,SAAA,CAAA,sBAAA,CAAuB,GAAvB,EAA4B,GAA5B,CAApB;AACA,IAAA,MAAM,GAAG,SAAA,CAAA,cAAA,CAAe,WAAf,EAA4B,GAA5B,CAAT;AACD;;AACD,SAAO,MAAP;AACD;;AAdD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmacSha512VerifySync = exports.hmacSha512SignSync = exports.hmacSha256VerifySync = exports.hmacSha256SignSync = void 0;\nconst helpers_1 = require(\"../helpers\");\nfunction hmacSha256SignSync(key, msg) {\n    let result;\n    if (helpers_1.isNode()) {\n        result = helpers_1.nodeHmacSha256Sign(key, msg);\n    }\n    else {\n        result = helpers_1.fallbackHmacSha256Sign(key, msg);\n    }\n    return result;\n}\nexports.hmacSha256SignSync = hmacSha256SignSync;\nfunction hmacSha256VerifySync(key, msg, sig) {\n    let result;\n    if (helpers_1.isNode()) {\n        const expectedSig = helpers_1.nodeHmacSha256Sign(key, msg);\n        result = helpers_1.isConstantTime(expectedSig, sig);\n    }\n    else {\n        const expectedSig = helpers_1.fallbackHmacSha256Sign(key, msg);\n        result = helpers_1.isConstantTime(expectedSig, sig);\n    }\n    return result;\n}\nexports.hmacSha256VerifySync = hmacSha256VerifySync;\nfunction hmacSha512SignSync(key, msg) {\n    let result;\n    if (helpers_1.isNode()) {\n        result = helpers_1.nodeHmacSha512Sign(key, msg);\n    }\n    else {\n        result = helpers_1.fallbackHmacSha512Sign(key, msg);\n    }\n    return result;\n}\nexports.hmacSha512SignSync = hmacSha512SignSync;\nfunction hmacSha512VerifySync(key, msg, sig) {\n    let result;\n    if (helpers_1.isNode()) {\n        const expectedSig = helpers_1.nodeHmacSha512Sign(key, msg);\n        result = helpers_1.isConstantTime(expectedSig, sig);\n    }\n    else {\n        const expectedSig = helpers_1.fallbackHmacSha512Sign(key, msg);\n        result = helpers_1.isConstantTime(expectedSig, sig);\n    }\n    return result;\n}\nexports.hmacSha512VerifySync = hmacSha512VerifySync;\n//# sourceMappingURL=sync.js.map"]},"metadata":{},"sourceType":"script"}